{"version":3,"sources":["app/App.js","index.js"],"names":["indexColours","indexData","data","map","value","datasetKeyProvider","btoa","Math","random","substring","horz_ln_upper","horz_ln_median","NaN","horz_ln_lower","Dashboard","state","labels","returnsData","datasets","label","dataPortfolio","borderWidth","fill","borderColor","pointHitRadius","dataSP500","backgroundColor","Array","length","borderDash","subtitle","periodChange","x","console","log","ChartData","setState","returnsChartOptions","scales","xAxes","gridLines","display","lineWidth","yAxes","ticks","callback","index","values","round","fontColor","zeroLineWidth","zeroLineColor","legend","position","filter","item","chart","text","includes","elements","point","radius","line","tension","tooltips","callbacks","tooltipItem","currentValue","datasetIndex","parseFloat","toFixed","title","maintainAspectRatio","responsive","indexChartData","indexChartOptions","drawBorder","PerformanceChartData","performanceData","sp500","portfolio","PerformanceChartOptions","drawTicks","beginAtZero","stepSize","padding","feesChartData","cashData","fees_labels","fees_data","slice","concat","undefined","feesChartOptions","min","tradesChartData","trades_labels","trades_data","tradesChartOptions","barThickness","tobuyData","className","last_update","toLocaleString","minimumFractionDigits","maximumFractionDigits","invested","gain","gain_pct","style","height","this","options","cagr","index_spx","cash_usd","cash_eur","monthly_trades","monthly_fees","id","onClick","align","portfolioData","row","i","name","return_ttl","return_pct","buy_sell","stock","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80352dcb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Line, Bar} from 'react-chartjs-2';\n\n\n\n\nimport returnsData from  '../assets/data/returns.json';\nimport indexData from  '../assets/data/index.json';\nimport performanceData from  '../assets/data/performance.json';\nimport cashData from  '../assets/data/cash.json';\nimport portfolioData from  '../assets/data/portfolio.json';\nimport tobuyData from  '../assets/data/to_buy.json';\n\nconst indexColours = indexData.data.map((value) => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\n\nconst datasetKeyProvider=()=>{ \n     return btoa(Math.random()).substring(0,12)\n } \n\nconst horz_ln_upper = [0.007,0.023,0.075,.7]\nconst horz_ln_median = [NaN,0.006,0.03,0.5]\nconst horz_ln_lower = [-0.004,-0.007,-0.005,0.3]\n\nexport class Dashboard extends Component { \n  \n  state = {\n        labels: returnsData[0].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[0].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)'],\n          pointHitRadius: 20\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[0].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false,\n          pointHitRadius: 20\n        },\n        {\n          label: 'Upper quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_upper[0]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.2)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.1)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Median Return',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_median[0]),\n          fill: false, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.5)'],\n          borderDash: [2,3],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Lower quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_lower[0]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.2)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.1)'],\n          pointHitRadius: 0\n        }],\n        subtitle: returnsData[0].subtitle    \n       };\n\n  \n  periodChange = (x) => {\n    console.log(x);\n    var ChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)'],\n          pointHitRadius: 20\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false,\n          pointHitRadius: 20\n\n        },\n        {\n          label: 'Upper quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_upper[x]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.2)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.1)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Median Return',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_median[x]),\n          fill: false, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.5)'],\n          borderDash: [2,3],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Lower quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_lower[x]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.2)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.1)'],\n          pointHitRadius: 0\n        }],\n        subtitle: returnsData[x].subtitle    \n       };\n    this.setState(ChartData);\n  }\n\n  returnsChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 200,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round(value * 1000) / 10 + \"%\"\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          lineWidth: 0,\n          zeroLineWidth: 2,\n          zeroLineColor: 'rgba(148, 151, 193,.7)'\n        }\n      },]\n    },\n    legend: {\n      display: true,\n      position: 'top',\n      labels: {\n                filter: function(item, chart) {\n                    // Logic to remove a particular legend item goes here\n                    return !item.text.includes('Median Return') & !item.text.includes('Upper quartile') & !item.text.includes('Lower quartile');\n                }\n            }\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var percentage = parseFloat((currentValue*100).toFixed(2));\n          return percentage + '%';\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      },      \n    },\n    maintainAspectRatio: false,\n    responsive: true,\n  };\n\n\n  indexChartData = {\n    labels: indexData.labels,\n    datasets: [{\n      label: 'Portfolio',\n      data: indexData.data,\n      borderWidth: 1,\n      fill: false,\n      borderColor: indexColours,\n      backgroundColor: indexColours,\n    }]\n  };\n  indexChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round((value +1) *100)\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var index = parseFloat(((currentValue +1)*100 ).toFixed(1));\n          return index;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      },\n      \n    },\n    maintainAspectRatio: false\n  };\n\n\n  PerformanceChartData = {\n    labels: performanceData.labels,\n    datasets: [{\n      label: 'S&P500',\n      data: performanceData.sp500,\n      fill: true,\n      backgroundColor: ['rgba(20, 22, 49, 1)'],\n      borderColor: ['rgb(163, 134, 13)'],\n      borderWidth: 1,\n      pointHitRadius: 20\n    },{\n      label: 'Portfolio',\n      data: performanceData.portfolio,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)'],\n      pointHitRadius: 20\n    }]\n  };\n\n  PerformanceChartOptions = {\n    scales: {\n      yAxes: [{\n        display: true,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false\n        },\n        ticks: {\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: false,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var value = parseFloat((currentValue).toFixed(3));\n          return value;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n  feesChartData = {\n    labels: cashData.fees_labels,\n    datasets: [{\n      data: cashData.fees_data.slice(0, cashData.fees_data.length - 1).concat([undefined]),\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: 'rgba(0, 204, 212, .2)',\n      borderColor: 'rgb(0, 204, 212)',\n      pointHitRadius: 20\n    },\n    {\n      data: Array(cashData.fees_data.length - 2 ).fill(undefined).concat( cashData.fees_data.slice(cashData.fees_data.length - 2, cashData.fees_data.length)),\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: 'rgba(0, 204, 212, .2)',\n      borderColor: 'rgb(0, 204, 212)',\n      borderDash: [1,3],\n      pointHitRadius: 20\n    }],\n    \n  };\n\n  feesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          min: 0,\n          \n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var value = parseFloat((currentValue).toFixed(2));\n          return \"\\u20AC \" + value;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n\n    },\n  };\n\n  tradesChartData = {\n    labels: cashData.trades_labels,\n    datasets: [{\n      data: cashData.trades_data,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0)']) ,\n      borderColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.5)'])\n    }]\n  };\n\n  tradesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        ticks: {\n          display: false,\n          min: 0,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        \n        ticks: {\n          display: false,\n          \n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      barThickness: 8,\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  };\n  \n  \n\n  render() {\n    console.log(tobuyData)\n    return (\n      <div>\n        <div className=\"container p-md-0\">\n          <div className=\"az-content-body\">\n            <div className=\"az-dashboard-one-title\">\n              <div>\n                <h2 className=\"az-dashboard-title\">Portfolio Performance</h2> \n              </div>\n              <div className=\"az-content-header-right\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <label className=\"sp500_lastupdate\">Last update</label>\n                    <p>{performanceData.last_update}</p>\n                  </div>{/* media-body */}\n                </div>{/* media */}\n              </div>\n            </div>{/* az-dashboard-one-title */}\n\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-7 ht-lg-100p\">\n                <div>\n                  <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <h6 className=\"card-title\">Portfolio Value</h6>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"card-body-top\">\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Value</label>\n                          <h2>{performanceData.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Invested</label>\n                          <h2>{performanceData.invested.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain</label>\n                          <h2>{(performanceData.gain<0?\"\":\"+\") + performanceData.gain.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain vs. Invested</label>\n                          <h2>{(performanceData.gain_pct<0?\"\":\"+\") + (Math.round(performanceData.gain_pct * 1000)/10).toLocaleString('en-UK', { minimumFractionDigits: 1}) + \"%\"}</h2>\n                        </div>\n                      </div>{/* card-body-top */}\n                      <div className=\"performance-chart-wrapper\" style={{height:'263px'}}>\n                        <Line data={this.PerformanceChartData} options={this.PerformanceChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n                </div>{/* row */}\n              </div>{/* col */}\n              <div className=\"col-lg-5 mg-t-20 mg-lg-t-0\">\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6\">\n\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                            <h6 className=\"card-title \" > <i className=\"fa fa-line-chart\"/> Performance</h6>\n                            <p className=\"card-text\">since 13 Oct 2021</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Annual Return</label>\n                            <h4>{(performanceData.cagr<0?\"\":\"+\") + (Math.round(performanceData.cagr * 1000)/10).toLocaleString('en-UK', { minimumFractionDigits: 1}) + \"%\"}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Index vs SPX</label>\n                            <h4>{Math.round(performanceData.index_spx)}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                        <h6 className=\"card-title\"><i className=\"fa fa-money\"/> Cash</h6>\n                        <p className=\"card-text\">&ensp;</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&#36; Dollar</label>\n                            <h4>{cashData.cash_usd.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&euro; Euro </label>\n                            <h4>{cashData.cash_eur.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                </div>{/* row */}\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20 \">\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_trades}</h6>\n                        <p>trades opened last month</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Bar data={this.tradesChartData} options={this.tradesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20\" >\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_fees.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})} <small>&euro;</small></h6>\n                        <p>last month EUR fees</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Line data={this.feesChartData} options={this.feesChartOptions} datasetKeyProvider={datasetKeyProvider}  />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                </div>{/* row */}\n                \n              </div>{/*col */}\n            </div>{/* row */}\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Rate of return</h6>\n                        <p className=\"card-text sp500_returnsTitle\">{this.state.subtitle}</p>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button className=\"btn\" id=\"btnDay\" onClick={() => {this.periodChange(0)}}>Day</button>\n                        <button className=\"btn\" id=\"btnWeek\" onClick={() => {this.periodChange(1)}}>Week</button>\n                        <button className=\"btn\" id=\"btnMonth\" onClick={() => {this.periodChange(2)}}>Month</button>\n                        <button className=\"btn\" id=\"btnYear\"  onClick={() => {this.periodChange(3)}}>Year</button>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Line data={this.state} options={this.returnsChartOptions} datasetKeyProvider={datasetKeyProvider} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Index vs S&P500</h6>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Bar data={this.indexChartData} options={this.indexChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-12 mg-t-20 mg-lg-t-0\">\n                <div className=\"card card-dashboard-one sp500_card\">\n                  <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th className=\"wd-45p\">Stock</th>\n                            <td align=\"right\">Position</td>\n                            <td align=\"right\">Return</td>\n                            <td align= \"center\">Sell / Buy</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n\n                          {\n                            portfolioData.map((row, i) => {\n                              return (\n                                <tr>\n                                  <td><strong>{row.name}</strong></td>\n                                  <td align= \"right\">€{row.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})} </td>\n                                  <td  align= \"right\"><strong>{(row.return_ttl<0?\"\":\"+\") + row.return_ttl.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</strong> ({(row.return_pct<0?\"\":\"+\") + Math.round(row.return_pct * 1000)/10 }%)</td>\n                                  <td  align= \"center\"><small>{row.buy_sell}</small></td>\n                                </tr>\n                               );\n                             })\n                           }\n                           \n                        </tbody>\n                      </table>\n                    </div>{/* table */}\n                  </div>{/* card-body */}\n                </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n            <div className=\"row row-sm mg-b-20\">{/* row */}\n              <div  className=\"col-lg-12 mg-t-20 mg-lg-t-0\">{/* col */}\n                <div className=\"card card-dashboard-one sp500_card\">{/* card */}\n                  <div className=\"card-header\">{/* card header */}\n                    <h6 className=\"card-title sp500_title\">Today's buys</h6>\n                  </div>{/* card header*/}\n                  <div className=\"card-body\">\n                      {tobuyData.map(stock =>\n                        <div> {stock} </div>\n                       )}\n                  </div>{/* card body*/}\n                </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/App.scss';\n\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nimport App from './app/App';\n\n\nReactDOM.render(\n    <div className=\"az-content-wrapper\">\n      <App />\n    </div>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}