{"version":3,"sources":["app/App.js","index.js"],"names":["indexColours","indexData","data","map","value","datasetKeyProvider","btoa","Math","random","substring","horz_ln_upper","horz_ln_median","NaN","horz_ln_lower","Dashboard","state","labels","returnsData","datasets","label","dataPortfolio","borderWidth","fill","borderColor","backgroundColor","pointHitRadius","dataSP500","Array","length","borderDash","subtitle","periodChange","x","console","log","ChartData","setState","returnsChartOptions","responsive","maintainAspectRatio","scales","grid","display","ticks","color","y","callback","index","values","round","plugins","legend","position","filter","item","chart","text","includes","tooltip","callbacks","context","dataset","parsed","elements","point","radius","indexChartData","barPercentage","indexChartOptions","PerformanceChartData","performanceData","portfolio","sp500","PerformanceChartOptions","stepSize","feesChartData","cashData","fees_labels","fees_data","slice","concat","undefined","feesChartOptions","beginAtZero","min","fontColor","padding","tradesChartData","trades_labels","trades_data","tradesChartOptions","drawBorder","barThickness","tobuyData","className","last_update","toLocaleString","minimumFractionDigits","maximumFractionDigits","invested","gain","gain_pct","style","height","this","options","cagr","index_spx","cash_usd","cash_eur","monthly_trades","top","width","monthly_fees","id","onClick","align","portfolioData","row","i","name","return_ttl","return_pct","buy_sell","stock","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6cb7ab9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Line, Bar} from 'react-chartjs-2'\n\n\n\nimport returnsData from  '../assets/data/returns.json';\nimport indexData from  '../assets/data/index.json';\nimport performanceData from  '../assets/data/performance.json';\nimport cashData from  '../assets/data/cash.json';\nimport portfolioData from  '../assets/data/portfolio.json';\nimport tobuyData from  '../assets/data/to_buy.json';\n\nconst indexColours = indexData.data.map((value) => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\n\nconst datasetKeyProvider=()=>{ \n     return btoa(Math.random()).substring(0,12)\n } \n\nconst horz_ln_upper = [0.007,0.023,0.075,.7]\nconst horz_ln_median = [NaN,0.006,0.03,0.5]\nconst horz_ln_lower = [-0.004,-0.007,-0.005,0.3]\n\nexport class Dashboard extends Component { \n  \n  state = {\n        labels: returnsData[0].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[0].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)'],\n          backgroundColor: ['rgb(0, 204, 212)'],\n          pointHitRadius: 20\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[0].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(185, 153, 15)'],\n          borderWidth: 1,\n          fill: false,\n          pointHitRadius: 20\n        },\n        {\n          label: 'Upper quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_upper[0]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.3)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.3)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Median Return',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_median[0]),\n          fill: false, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.5)'],\n          borderDash: [2,3],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Lower quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_lower[0]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.3)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.3)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Zero Line',\n          data: Array(returnsData[0].dataSP500.length).fill(0),\n          fill: true, \n          borderWidth: 2,\n          borderColor: ['rgba(252, 252, 252,.6)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.3)'],\n          pointHitRadius: 0\n        }],\n        subtitle: returnsData[0].subtitle    \n       };\n\n  \n  periodChange = (x) => {\n    console.log(x);\n    var ChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)'],\n          backgroundColor: ['rgb(0, 204, 212)'],\n          pointHitRadius: 20\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(185, 153, 15)'],\n          borderWidth: 1,\n          fill: false,\n          pointHitRadius: 20\n\n        },\n        {\n          label: 'Upper quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_upper[x]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.3)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.3)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Median Return',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_median[x]),\n          fill: false, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.5)'],\n          borderDash: [2,3],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Lower quartile',\n          data: Array(returnsData[0].dataSP500.length).fill(horz_ln_lower[x]),\n          fill: true, \n          borderWidth: 1,\n          borderColor: ['rgba(148, 151, 193,.3)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.3)'],\n          pointHitRadius: 0\n        },\n        {\n          label: 'Zero Line',\n          data: Array(returnsData[0].dataSP500.length).fill(0),\n          fill: true, \n          borderWidth: 2,\n          borderColor: ['rgba(252, 252, 252,.6)'],\n          backgroundColor: ['rgba(0, 0, 0, 0.1)'],\n          pointHitRadius: 0\n        }],\n        subtitle: returnsData[x].subtitle    \n       };\n    this.setState(ChartData);\n  }\n\n  returnsChartOptions = {\n   responsive: true,\n   maintainAspectRatio: false,\n   scales: {\n      x: {\n          grid: {\n              display: false\n          },\n          ticks: {\n              color: 'rgba(148, 151, 193)'\n          }\n      },\n      y: {\n          grid: {\n              display: false\n          },\n          ticks: {\n              callback: function(value, index, values) {\n                return Math.round(value * 1000) / 10 + \"%\"\n              },\n              color: 'rgba(148, 151, 193)'\n          },\n      }\n    },\n    plugins: {\n        \n        legend: {\n          display: true,\n          position: 'top',\n          labels: {\n                filter: function(item, chart) {\n                    // Logic to remove a particular legend item goes here\n                    return !item.text.includes('Median Return') & !item.text.includes('Upper quartile') & !item.text.includes('Lower quartile')& !item.text.includes('Zero Line');\n                }\n            }\n        },\n        tooltip: {\n            callbacks: {\n                label: function(context) {\n                    var label = context.dataset.label || '';\n                    if (label) { label += ': '; }\n                    if (context.parsed.y !== null) { label += Math.round(context.parsed.y * 10000)/100 + \"%\";}\n                    return label;    \n                }\n            },\n        },     \n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n  };\n\n\n  indexChartData = {\n    labels: indexData.labels,\n    datasets: [{\n      label: 'Portfolio',\n      data: indexData.data,\n      borderWidth: 1,\n      fill: false,\n      borderColor: 'rgba(0, 0, 0, 0)',\n      backgroundColor: indexColours,\n      barPercentage: 1.2\n    }]\n  };\n\n  indexChartOptions = {\n   scales: {\n      x: {\n          grid: {\n              display: false\n          },\n          ticks: {\n              color: 'rgba(148, 151, 193)'\n          }\n      },\n      y: {\n          grid: {\n              display: false\n          },\n          ticks: {\n              callback: function(value, index, values) {\n                return Math.round((value + 1) * 1000)/10\n              },\n              color: 'rgba(148, 151, 193)'\n          },\n      }\n    },\n    plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n            callbacks: {\n                label: function(context) {\n                    var label = Math.round((context.parsed.y + 1)*10000 )/100;\n                    return label;    \n                }\n            },\n        },     \n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  };\n\n\n  PerformanceChartData = {\n    labels: performanceData.labels,\n    datasets: [{\n      label: 'Portfolio',\n      data: performanceData.portfolio,\n      borderWidth: 2,\n      fill: false,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)'],\n      pointHitRadius: 20\n    },{\n      label: 'S&P500',\n      data: performanceData.sp500,\n      fill: true,\n      backgroundColor: ['rgba(20, 22, 49, 1)'],\n      borderColor: ['rgb(163, 134, 13)'],\n      borderWidth: 1,\n      pointHitRadius: 20\n    },{\n      label: 'Portfolio',\n      data: performanceData.portfolio,\n      borderWidth: 0,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)'],\n      pointHitRadius: 0\n    }]\n  };\n\n  PerformanceChartOptions = {\n    scales: {\n      y: {\n        display: true,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          display: false\n        }\n      },\n      x: {\n        display: false,\n        grid: {\n          display: false,\n        },\n        ticks:  {\n          stepSize: 10\n        }\n      },\n    },\n    plugins: {\n        legend: { display: false},\n        tooltip: {\n            callbacks: {\n                label: function(context) {\n                    var label = context.dataset.label || '';\n                    if (label) { label += ': '; }\n                    if (context.parsed.y !== null) { label += Math.round(context.parsed.y * 1000)/1000}\n                    return label;    \n                }\n            },\n        },     \n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n  };\n\n  feesChartData = {\n    labels: cashData.fees_labels,\n    datasets: [{\n      data: cashData.fees_data.slice(0, cashData.fees_data.length - 1).concat([undefined]),\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: 'rgba(0, 204, 212, .2)',\n      borderColor: 'rgb(0, 204, 212)',\n      pointHitRadius: 20\n    },\n    {\n      data: Array(cashData.fees_data.length - 2 ).fill(undefined).concat( cashData.fees_data.slice(cashData.fees_data.length - 2, cashData.fees_data.length)),\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: 'rgba(0, 204, 212, .2)',\n      borderColor: 'rgb(0, 204, 212)',\n      borderDash: [1,3],\n      pointHitRadius: 20\n    }],\n    \n  };\n\n  feesChartOptions = {\n    scales: {\n      y: {\n        display: false,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          min: 0,          \n        }\n      },\n      x: {\n        display: false,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      },\n    },\n    plugins: {\n        legend: {\n            display: false\n        }\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n\n  };\n\n  tradesChartData = {\n    labels: cashData.trades_labels,\n    datasets: [{\n      data: cashData.trades_data,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0)']) ,\n      borderColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.5)'])\n    }]\n  };\n\n  tradesChartOptions = {\n    scales: {\n      y: {\n        display: false,\n        ticks: {\n          display: false,\n          min: 0,\n        },\n        grid: {\n          drawBorder: false,\n          display: false\n        }\n      },\n      x: {\n        display: false,\n        \n        ticks: {\n          display: false,\n          \n        },\n        grid: {\n          drawBorder: false,\n          display: false\n        }\n      },\n      barThickness: 8,\n    },\n    plugins: {\n        legend: {\n          display: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        }\n    }\n  };\n  \n  \n\n  render() {\n    console.log(tobuyData)\n    return (\n      <div>\n        <div className=\"container p-md-0\">\n          <div className=\"az-content-body\">\n            <div className=\"az-dashboard-one-title\">\n              <div>\n                <h2 className=\"az-dashboard-title\">Portfolio Performance</h2> \n              </div>\n              <div className=\"az-content-header-right\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <label className=\"sp500_lastupdate\">Last update</label>\n                    <p>{performanceData.last_update}</p>\n                  </div>{/* media-body */}\n                </div>{/* media */}\n              </div>\n            </div>{/* az-dashboard-one-title */}\n\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-7 ht-lg-100p\">\n                <div>\n                  <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <h6 className=\"card-title\">Portfolio Value</h6>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"card-body-top\">\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Value</label>\n                          <h2>{performanceData.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Invested</label>\n                          <h2>{performanceData.invested.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain</label>\n                          <h2>{(performanceData.gain<0?\"\":\"+\") + performanceData.gain.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain vs. Invested</label>\n                          <h2>{(performanceData.gain_pct<0?\"\":\"+\") + (Math.round(performanceData.gain_pct * 1000)/10).toLocaleString('en-UK', { minimumFractionDigits: 1}) + \"%\"}</h2>\n                        </div>\n                      </div>{/* card-body-top */}\n                      <div className=\"performance-chart-wrapper\" style={{height:'263px'}}>\n                        <Line data={this.PerformanceChartData} options={this.PerformanceChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n                </div>{/* row */}\n              </div>{/* col */}\n              <div className=\"col-lg-5 mg-t-20 mg-lg-t-0\">\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6\">\n\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                            <h6 className=\"card-title \" > <i className=\"fa fa-line-chart\"/> Performance</h6>\n                            <p className=\"card-text\">since 13 Oct 2021</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Annual Return</label>\n                            <h4>{(performanceData.cagr<0?\"\":\"+\") + (Math.round(performanceData.cagr * 1000)/10).toLocaleString('en-UK', { minimumFractionDigits: 1}) + \"%\"}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Index vs SPX</label>\n                            <h4>{Math.round(performanceData.index_spx*10)/10}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                        <h6 className=\"card-title\"><i className=\"fa fa-money\"/> Cash</h6>\n                        <p className=\"card-text\">&ensp;</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Dollar</label>\n                            <h4><small>&#36;</small>{cashData.cash_usd.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Euro </label>\n                            <h4><small>&euro;</small>{cashData.cash_eur.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                </div>{/* row */}\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20 \">\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_trades}</h6>\n                        <p>trades opened last month</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\" style={{top:'20px',height:'100px',width:'200px'}}>\n                          <Bar data={this.tradesChartData} options={this.tradesChartOptions} top={\"200%\"}/>\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20\" >\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_fees.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})} <small>&euro;</small></h6>\n                        <p>last month EUR fees</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\" style={{top:'20px',height:'100px',width:'200px'}}>\n                          <Line data={this.feesChartData} options={this.feesChartOptions} datasetKeyProvider={datasetKeyProvider} height={\"100%\"}/>\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                </div>{/* row */}\n                \n              </div>{/*col */}\n            </div>{/* row */}\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Rate of return</h6>\n                        <p className=\"card-text sp500_returnsTitle\">{this.state.subtitle}</p>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button className=\"btn\" id=\"btnDay\" onClick={() => {this.periodChange(0)}}>Day</button>\n                        <button className=\"btn\" id=\"btnWeek\" onClick={() => {this.periodChange(1)}}>Week</button>\n                        <button className=\"btn\" id=\"btnMonth\" onClick={() => {this.periodChange(2)}}>Month</button>\n                        <button className=\"btn\" id=\"btnYear\"  onClick={() => {this.periodChange(3)}}>Year</button>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Line data={this.state} options={this.returnsChartOptions} datasetKeyProvider={datasetKeyProvider} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Index vs S&P500</h6>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Bar data={this.indexChartData} options={this.indexChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-12 mg-t-20 mg-lg-t-0\">\n                <div className=\"card card-dashboard-one sp500_card\">\n                  <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th className=\"wd-45p\">Stock</th>\n                            <td align=\"right\">Position</td>\n                            <td align=\"right\">Return</td>\n                            <td align= \"center\">Sell / Buy</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n\n                          {\n                            portfolioData.map((row, i) => {\n                              return (\n                                <tr>\n                                  <td><strong>{row.name}</strong></td>\n                                  <td align= \"right\">€{row.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})} </td>\n                                  <td  align= \"right\"><strong>{(row.return_ttl<0?\"\":\"+\") + row.return_ttl.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</strong> ({(row.return_pct<0?\"\":\"+\") + Math.round(row.return_pct * 1000)/10 }%)</td>\n                                  <td  align= \"center\"><small>{row.buy_sell}</small></td>\n                                </tr>\n                               );\n                             })\n                           }\n                           \n                        </tbody>\n                      </table>\n                    </div>{/* table */}\n                  </div>{/* card-body */}\n                </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n            <div className=\"row row-sm mg-b-20\">{/* row */}\n              <div  className=\"col-lg-12 mg-t-20 mg-lg-t-0\">{/* col */}\n                <div className=\"card card-dashboard-one sp500_card\">{/* card */}\n                  <div className=\"card-header\">{/* card header */}\n                    <h6 className=\"card-title sp500_title\">Today's buys</h6>\n                  </div>{/* card header*/}\n                  <div className=\"card-body\">\n                      {tobuyData.map(stock =>\n                        <div> {stock} </div>\n                       )}\n                  </div>{/* card body*/}\n                </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/App.scss';\n\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nimport App from './app/App';\n\n\nReactDOM.render(\n    <div className=\"az-content-wrapper\">\n      <App />\n    </div>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}