{"ast":null,"code":"var _jsxFileName = \"/home/lu/azia-admin-react/template/src/app/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport data from '../assets/data/data.json';\nconst subtitleDay = \"Daily returns\";\nconst subtitleWeek = \"Weekly returns\";\nconst subtitleMonth = \"Monthly returns\";\nconst subtitleYear = \"Annual returns\";\nconst dataDayPortfolio = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345];\nconst dataWeekPortfolio = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345];\nconst dataMonthPortfolio = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454];\nconst dataYearPortfolio = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454];\nconst dataDaySP500 = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454];\nconst dataWeekSP500 = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454];\nconst dataMonthSP500 = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345];\nconst dataYearSP500 = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345];\nconst labelsDay = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst labelsWeek = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst labelsMonth = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst labelsYear = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nlet returnsData = [{\n  id: 1,\n  subtitle: \"Daily returns\",\n  labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  dataPortfolio: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345],\n  dataSP500: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\n}, {\n  id: 2,\n  subtitle: \"Weekly returns\",\n  labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  dataPortfolio: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345],\n  dataSP500: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\n}, {\n  id: 3,\n  subtitle: \"Monthly returns\",\n  labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  dataPortfolio: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454],\n  dataSP500: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\n}, {\n  id: 4,\n  subtitle: \"Annual returns\",\n  labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  dataPortfolio: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454],\n  dataSP500: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\n}];\nconst returnsChartData = {};\nconst indexData = [0.014184047765480878, 0.013970938363182528, 0.013908739469544296, 0.013854422494818275, 0.013912552702098235, 0.013861806308315128, 0.013826008481244267, 0.013806578500758171, 0.013865587834978932, 0.013831430642913922, 0.013805329557983415, 0.013731728132002852, 0.013762801887504228, 0.013759871475601315, 0.013778595646636527, 0.013714813240325308, 0.013646257943418671, 0.013627954557636768, 0.01366264615911672, 0.013703280312633792, 0.013540992190024026, 0.013610998914963979, 0.013559345361641606, 0.013492082881249923, 0.013516563254905467, 0.013451419925979646, 0.013431520318683887, 0.013595315308286171, 0.007637348986398118, 0.001175136845485536, 0.0019504643054470971, -0.004461332613662217, -0.012506152925756298, -0.013405631653989003, -0.02181942089414335, -0.012967073903215165, -0.010015164776051133, -0.017553644091289566, -0.010761216103666094, -0.021597739048565545, -0.021995633615708332, -0.02976678271766653, -0.037700881473518466, -0.025618826277375994, -0.027758340363248868, -0.03371553902999613, -0.03126229307235884, -0.02906346138717275, -0.03287235822675527, -0.02303004789777241, -0.023025315260015278, -0.022146037259818452, -0.018595191455883398, -0.01790501917657994, -0.01652901477157409, -0.02261526788087631, -0.02230568921258025, -0.02430641638816189, -0.01995905941486309, -0.01683287277563894, -0.013117812943918672, -0.01732652450258665, -0.01950519114253413, -0.019257952000923062, -0.024314174180008696, -0.027370311751153897, -0.02698935331836949, -0.025781194740477575, -0.026558676657364555, -0.026532686581009157, -0.02628027448033121, -0.028184080589851224, -0.03034643108140278, -0.019304753855777124, -0.01953732520893514, -0.02379670974516812, -0.01863224042870304, -0.027656004894758057, -0.029601491068522834, -0.029226811423456622, 0.002299676562223407, 0.0, 0.005929612513250193, 0.006309382221429738, 0.009841225477893234, 0.01365659988257617, 0.006840626556237295, 0.018939342343391674, 0.02200289044419157, 0.018281469677635442, 0.013933127083358032, 0.006252578115405916, 0.011476239786640141, 0.00036311205900507737];\nconst indexColours = indexData.map(value => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\nexport class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.periodChange = x => {\n      var newChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)']\n        }, {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderWidth: 2,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false\n        }],\n        subtitle: returnsData[x].subtitle\n      };\n      this.setState(newChartData);\n    };\n\n    this.returnsChartOptions = {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false,\n            lineWidth: 100,\n            borderColor: ['rgb(148, 151, 193)']\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            callback: function (value, index, values) {\n              return Math.round(value * 1000) / 10 + \"%\";\n            },\n            fontColor: 'rgb(148, 151, 193)'\n          },\n          gridLines: {\n            drawBorder: true,\n            borderDash: [1, 3],\n            zeroLineColor: 'rgba(148, 151, 193,.3)'\n          }\n        }]\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.datasets[tooltipItem.datasetIndex];\n            var currentValue = dataset.data[tooltipItem.index];\n            var percentage = parseFloat((currentValue * 100).toFixed(1));\n            return percentage + '%';\n          },\n          title: function (tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n    this.indexChartData = {\n      labels: ['2021-05-19', '2021-05-20', '2021-05-21', '2021-05-24', '2021-05-25', '2021-05-26', '2021-05-27', '2021-05-28', '2021-06-01', '2021-06-02', '2021-06-03', '2021-06-04', '2021-06-07', '2021-06-08', '2021-06-09', '2021-06-10', '2021-06-11', '2021-06-14', '2021-06-15', '2021-06-16', '2021-06-17', '2021-06-18', '2021-06-21', '2021-06-22', '2021-06-23', '2021-06-24', '2021-06-25', '2021-06-28', '2021-06-29', '2021-06-30', '2021-07-01', '2021-07-02', '2021-07-06', '2021-07-07', '2021-07-08', '2021-07-09', '2021-07-12', '2021-07-13', '2021-07-14', '2021-07-15', '2021-07-16', '2021-07-19', '2021-07-20', '2021-07-21', '2021-07-22', '2021-07-23', '2021-07-26', '2021-07-27', '2021-07-28', '2021-07-29', '2021-07-30', '2021-08-02', '2021-08-03', '2021-08-04', '2021-08-05', '2021-08-06', '2021-08-09', '2021-08-10', '2021-08-11', '2021-08-12', '2021-08-13', '2021-08-16', '2021-08-17', '2021-08-18', '2021-08-19', '2021-08-20', '2021-08-23', '2021-08-24', '2021-08-25', '2021-08-26', '2021-08-27', '2021-08-30', '2021-08-31', '2021-09-01', '2021-09-02', '2021-09-03', '2021-09-07', '2021-09-08', '2021-09-09', '2021-09-10', '2021-09-13', '2021-09-14', '2021-09-15', '2021-09-16', '2021-09-17', '2021-09-20', '2021-09-21', '2021-09-22', '2021-09-23', '2021-09-24', '2021-09-27', '2021-09-28', '2021-09-29', '2021-09-30'],\n      datasets: [{\n        label: 'Portfolio',\n        data: indexData,\n        borderWidth: 1,\n        fill: false,\n        borderColor: indexColours,\n        backgroundColor: indexColours\n      }]\n    };\n    this.indexChartOptions = {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false,\n            lineWidth: 100,\n            borderColor: ['rgb(148, 151, 193)']\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            callback: function (value, index, values) {\n              return Math.round((value + 1) * 100);\n            },\n            fontColor: 'rgb(148, 151, 193)'\n          },\n          gridLines: {\n            drawBorder: true,\n            borderDash: [1, 3],\n            zeroLineColor: 'rgba(148, 151, 193,.3)'\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.datasets[tooltipItem.datasetIndex];\n            var currentValue = dataset.data[tooltipItem.index];\n            var index = parseFloat(((currentValue + 1) * 100).toFixed(1));\n            return index;\n          },\n          title: function (tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n    this.PerformanceChartData = {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95],\n      datasets: [{\n        label: 'S&P500',\n        data: [0.96, 0.958, 0.94, 0.957, 0.963, 0.967, 0.962, 0.967, 0.97, 0.971, 0.966, 0.969, 0.971, 0.978, 0.975, 0.975, 0.974, 0.979, 0.986, 0.987, 0.984, 0.98, 0.995, 0.989, 0.993, 1, 0.997, 1.003, 1.005, 1.006, 1.012, 1.016, 1.02, 1.027, 1.027, 1.035, 1.022, 1.032, 1.036, 1.043, 1.038, 1.038, 1.034, 1.014, 1.029, 1.035, 1.039, 1.051, 1.05, 1.04, 1.047, 1.045, 1.041, 1.043, 1.041, 1.045, 1.048, 1.058, 1.059, 1.063, 1.063, 1.065, 1.063, 1.062, 1.067, 1.067, 1.058, 1.067, 1.074, 1.073, 1.075, 1.071, 1.074, 1.081, 1.079, 1.075, 1.077, 1.073, 1.073, 1.072, 1.073, 1.066, 1.002, 1, 0.999, 1.001, 1, 0.982, 0.987, 0.992, 1.003, 0.98, 0.982, 0.965, 0.968],\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: ['rgba(20, 22, 49, 1)'],\n        borderColor: ['rgb(163, 134, 13)'],\n        borderWidth: 1\n      }, {\n        label: 'Portfolio',\n        data: [0.976, 0.971, 0.953, 0.971, 0.976, 0.981, 0.976, 0.98, 0.983, 0.985, 0.98, 0.983, 0.985, 0.991, 0.989, 0.989, 0.987, 0.993, 0.999, 1.001, 0.997, 0.994, 1.009, 1.002, 1.007, 1.013, 1.011, 1.017, 1.019, 1.02, 1.02, 1.018, 1.022, 1.023, 1.014, 1.021, 1, 1.019, 1.025, 1.025, 1.027, 1.015, 1.011, 0.984, 0.991, 1.008, 1.01, 1.016, 1.017, 1.01, 1.013, 1.021, 1.017, 1.02, 1.021, 1.027, 1.031, 1.034, 1.036, 1.038, 1.042, 1.047, 1.049, 1.043, 1.047, 1.047, 1.032, 1.038, 1.045, 1.045, 1.047, 1.043, 1.046, 1.05, 1.046, 1.054, 1.056, 1.048, 1.053, 1.042, 1.042, 1.035, 1.004, 1, 1.005, 1.007, 1.01, 0.995, 0.994, 1.01, 1.025, 0.998, 0.996, 0.971, 0.979],\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: ['rgba(0, 204, 212, .2)'],\n        borderColor: ['rgb(0, 204, 212)']\n      }]\n    };\n    this.PerformanceChartOptions = {\n      scales: {\n        yAxes: [{\n          display: true,\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            display: false\n          }\n        }],\n        xAxes: [{\n          display: false,\n          position: 'bottom',\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            beginAtZero: false,\n            stepSize: 10,\n            fontColor: \"#a7afb7\",\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: false,\n        position: 'top'\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: 'rgba(2, 171, 254, 1)'\n      },\n      maintainAspectRatio: false\n    };\n    this.feesChartData = {\n      labels: ['19-2021', '20-2021', '21-2021', '22-2021', '23-2021', '24-2021', '25-2021', '26-2021', '27-2021', '28-2021', '29-2021', '30-2021', '31-2021', '32-2021', '33-2021', '34-2021', '35-2021', '36-2021', '37-2021', '38-2021', '39-2021'],\n      datasets: [{\n        data: [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 3, 3, 1, 1, 0, 23, 17, 0],\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: ['rgba(0, 204, 212, .2)'],\n        borderColor: ['rgb(0, 204, 212)']\n      }]\n    };\n    this.feesChartOptions = {\n      scales: {\n        yAxes: [{\n          display: false,\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            min: 0\n          }\n        }],\n        xAxes: [{\n          display: false,\n          position: 'bottom',\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 10,\n            fontColor: \"#a7afb7\",\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: 'rgba(2, 171, 254, 1)'\n      }\n    };\n    this.tradesChartData = {\n      labels: ['19-2021', '20-2021', '21-2021', '22-2021', '23-2021', '24-2021', '25-2021', '26-2021', '27-2021', '28-2021', '29-2021', '30-2021', '31-2021', '32-2021', '33-2021', '34-2021', '35-2021', '36-2021', '37-2021', '38-2021', '39-2021'],\n      datasets: [{\n        data: [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 3, 3, 1, 1, 0, 23, 17, 0],\n        borderWidth: 1,\n        fill: false,\n        backgroundColor: 'rgb(0, 204, 212)',\n        borderColor: 'rgb(0, 204, 212)'\n      }]\n    };\n    this.tradesChartOptions = {\n      scales: {\n        yAxes: [{\n          display: false,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            display: false\n          }\n        }],\n        xAxes: [{\n          display: false,\n          barThickness: 8,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            display: false\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.periodChange(0);\n    this.setState(returnsChartData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-md-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"az-content-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"az-dashboard-one-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"az-dashboard-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Portfolio Performance Tracker\")), React.createElement(\"div\", {\n      className: \"az-content-header-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_lastupdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Last update\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Oct 10, 2018\"))))), React.createElement(\"div\", {\n      className: \"row row-sm mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 ht-lg-100p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Portfolio Value\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"42,576\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Invested\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"13,956\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Gain\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"+29,589\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Gain vs. Invested\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"125%\"))), React.createElement(\"div\", {\n      className: \"performance-chart-wrapper\",\n      style: {\n        height: '263px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.PerformanceChartData,\n      options: this.PerformanceChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-lg-5 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-five sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesome, {\n      name: \"chart-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), \" Total Performance\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"since 21 Sep 2021\")), React.createElement(\"div\", {\n      className: \"card-body row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"Annual Return\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"33.5%\"))), React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Index vs SPX\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"120\")))))), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-five sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(FontAwesome, {\n      name: \"dollar-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), \" Cash\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"\\u2002\")), React.createElement(\"div\", {\n      className: \"card-body row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"$ Dollar\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"25,556\"))), React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"\\u20AC Euro \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"120\"))))))), React.createElement(\"div\", {\n      className: \"row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6 mg-t-20 mg-sm-t-20 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-two sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"56 \", React.createElement(\"i\", {\n      className: \"icon ion-md-trending-down tx-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), \" \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"0.86%\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \"weekly trades\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.tradesChartData,\n      options: this.tradesChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-6 mg-t-20 mg-sm-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-two sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"356 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"\\u20AC\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"EUR fees per month\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.feesChartData,\n      options: this.feesChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    })))))))), React.createElement(\"div\", {\n      className: \"row row-sm mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title sp500_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \"Rate of return\"), React.createElement(\"p\", {\n      className: \"card-text sp500_returnsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, this.state.subtitle)), React.createElement(\"div\", {\n      className: \"btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnDay\",\n      onClick: () => {\n        this.periodChange(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnWeek\",\n      onClick: () => {\n        this.periodChange(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnMonth\",\n      onClick: () => {\n        this.periodChange(2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \"Month\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnYear\",\n      onClick: () => {\n        this.periodChange(3);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"Year\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"returns-chart-wrapper\",\n      style: {\n        height: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.state,\n      options: this.returnsChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-lg-6 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title sp500_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"Index vs S&P500\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"returns-chart-wrapper\",\n      style: {\n        height: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.indexChartData,\n      options: this.indexChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    })))))))));\n  }\n\n}\nexport default Dashboard;","map":{"version":3,"sources":["/home/lu/azia-admin-react/template/src/app/dashboard/Dashboard.js"],"names":["React","Component","FontAwesome","Line","Bar","Pie","data","subtitleDay","subtitleWeek","subtitleMonth","subtitleYear","dataDayPortfolio","dataWeekPortfolio","dataMonthPortfolio","dataYearPortfolio","dataDaySP500","dataWeekSP500","dataMonthSP500","dataYearSP500","labelsDay","labelsWeek","labelsMonth","labelsYear","returnsData","id","subtitle","labels","dataPortfolio","dataSP500","returnsChartData","indexData","indexColours","map","value","Dashboard","periodChange","x","newChartData","datasets","label","borderWidth","fill","borderColor","backgroundColor","setState","returnsChartOptions","scales","xAxes","gridLines","display","lineWidth","yAxes","ticks","callback","index","values","Math","round","fontColor","drawBorder","borderDash","zeroLineColor","legend","position","elements","point","radius","line","tension","tooltips","callbacks","tooltipItem","dataset","datasetIndex","currentValue","percentage","parseFloat","toFixed","title","maintainAspectRatio","indexChartData","indexChartOptions","PerformanceChartData","PerformanceChartOptions","drawTicks","beginAtZero","stepSize","padding","feesChartData","feesChartOptions","min","tradesChartData","tradesChartOptions","barThickness","componentWillMount","render","height","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport {Line, Bar, Pie } from 'react-chartjs-2';\n\nimport data from  '../assets/data/data.json';\n\nconst subtitleDay = \"Daily returns\"\nconst subtitleWeek = \"Weekly returns\"\nconst subtitleMonth = \"Monthly returns\"\nconst subtitleYear = \"Annual returns\"\n\nconst dataDayPortfolio = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\nconst dataWeekPortfolio = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\nconst dataMonthPortfolio = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\nconst dataYearPortfolio = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\n\nconst dataDaySP500 = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\nconst dataWeekSP500 = [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\nconst dataMonthSP500 = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\nconst dataYearSP500 = [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\n\nconst labelsDay = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nconst labelsWeek = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nconst labelsMonth = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nconst labelsYear = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n\n\nlet returnsData = [\n      {\n        id: 1,\n        subtitle: \"Daily returns\",\n        labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        dataPortfolio: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345],\n        dataSP500: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\n      },\n      {\n        id: 2,\n        subtitle: \"Weekly returns\",\n        labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        dataPortfolio: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345],\n        dataSP500: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454]\n      },\n      {\n        id: 3,\n        subtitle: \"Monthly returns\",\n        labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        dataPortfolio: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454],\n        dataSP500: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\n      },\n      {\n        id: 4,\n        subtitle: \"Annual returns\",\n        labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        dataPortfolio: [0.0032141784319617006, 0.016633230529688126, 0.021942419556733705, 0.005014770516607925, 0.0012474370187687267, 0.017270514105685253, -0.010206092685398849, 0.016725690148056138, 0.004951949305468384, 0.0035216659010870455, 0.006186367797597958, -0.0002619244554729061, -0.007156547758580434, -0.061907950527215205, -0.019852682973363178, -0.012062873484866454],\n        dataSP500: [0.0031792822766352202, 0.016453216791338265, 0.0038993006564014276, -0.0035719332551666927, -0.00791114526668002, 0.00508006320806853, 0.0007442214123098978, 0.017152421475960855, 0.01471728074423817, -0.010971139353566084, 0.007314012424884275, 0.0022880025550917615, -0.012679209841481853, -0.024155141491146614, -0.01166062020279035, -0.018665310496622345]\n      }];\n\nconst returnsChartData = {};\n\nconst indexData = [0.014184047765480878, 0.013970938363182528, 0.013908739469544296, 0.013854422494818275, 0.013912552702098235, 0.013861806308315128, 0.013826008481244267, 0.013806578500758171, 0.013865587834978932, 0.013831430642913922, 0.013805329557983415, 0.013731728132002852, 0.013762801887504228, 0.013759871475601315, 0.013778595646636527, 0.013714813240325308, 0.013646257943418671, 0.013627954557636768, 0.01366264615911672, 0.013703280312633792, 0.013540992190024026, 0.013610998914963979, 0.013559345361641606, 0.013492082881249923, 0.013516563254905467, 0.013451419925979646, 0.013431520318683887, 0.013595315308286171, 0.007637348986398118, 0.001175136845485536, 0.0019504643054470971, -0.004461332613662217, -0.012506152925756298, -0.013405631653989003, -0.02181942089414335, -0.012967073903215165, -0.010015164776051133, -0.017553644091289566, -0.010761216103666094, -0.021597739048565545, -0.021995633615708332, -0.02976678271766653, -0.037700881473518466, -0.025618826277375994, -0.027758340363248868, -0.03371553902999613, -0.03126229307235884, -0.02906346138717275, -0.03287235822675527, -0.02303004789777241, -0.023025315260015278, -0.022146037259818452, -0.018595191455883398, -0.01790501917657994, -0.01652901477157409, -0.02261526788087631, -0.02230568921258025, -0.02430641638816189, -0.01995905941486309, -0.01683287277563894, -0.013117812943918672, -0.01732652450258665, -0.01950519114253413, -0.019257952000923062, -0.024314174180008696, -0.027370311751153897, -0.02698935331836949, -0.025781194740477575, -0.026558676657364555, -0.026532686581009157, -0.02628027448033121, -0.028184080589851224, -0.03034643108140278, -0.019304753855777124, -0.01953732520893514, -0.02379670974516812, -0.01863224042870304, -0.027656004894758057, -0.029601491068522834, -0.029226811423456622, 0.002299676562223407, 0.0, 0.005929612513250193, 0.006309382221429738, 0.009841225477893234, 0.01365659988257617, 0.006840626556237295, 0.018939342343391674, 0.02200289044419157, 0.018281469677635442, 0.013933127083358032, 0.006252578115405916, 0.011476239786640141, 0.00036311205900507737];\nconst indexColours = indexData.map((value) => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\n\nexport class Dashboard extends Component { \n  componentWillMount(){\n    this.periodChange(0);\n    this.setState(returnsChartData);\n  };\n\n  \n  periodChange = (x) => {\n    var newChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)']\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderWidth: 2,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false\n        }],\n        subtitle: returnsData[x].subtitle    \n       };\n    this.setState(newChartData)\n  }\n\n  returnsChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round(value * 1000) / 10 + \"%\"\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var percentage = parseFloat((currentValue*100).toFixed(1));\n          return percentage + '%';\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  indexChartData = {\n    labels: ['2021-05-19', '2021-05-20', '2021-05-21', '2021-05-24', '2021-05-25', '2021-05-26', '2021-05-27', '2021-05-28', '2021-06-01', '2021-06-02', '2021-06-03', '2021-06-04', '2021-06-07', '2021-06-08', '2021-06-09', '2021-06-10', '2021-06-11', '2021-06-14', '2021-06-15', '2021-06-16', '2021-06-17', '2021-06-18', '2021-06-21', '2021-06-22', '2021-06-23', '2021-06-24', '2021-06-25', '2021-06-28', '2021-06-29', '2021-06-30', '2021-07-01', '2021-07-02', '2021-07-06', '2021-07-07', '2021-07-08', '2021-07-09', '2021-07-12', '2021-07-13', '2021-07-14', '2021-07-15', '2021-07-16', '2021-07-19', '2021-07-20', '2021-07-21', '2021-07-22', '2021-07-23', '2021-07-26', '2021-07-27', '2021-07-28', '2021-07-29', '2021-07-30', '2021-08-02', '2021-08-03', '2021-08-04', '2021-08-05', '2021-08-06', '2021-08-09', '2021-08-10', '2021-08-11', '2021-08-12', '2021-08-13', '2021-08-16', '2021-08-17', '2021-08-18', '2021-08-19', '2021-08-20', '2021-08-23', '2021-08-24', '2021-08-25', '2021-08-26', '2021-08-27', '2021-08-30', '2021-08-31', '2021-09-01', '2021-09-02', '2021-09-03', '2021-09-07', '2021-09-08', '2021-09-09', '2021-09-10', '2021-09-13', '2021-09-14', '2021-09-15', '2021-09-16', '2021-09-17', '2021-09-20', '2021-09-21', '2021-09-22', '2021-09-23', '2021-09-24', '2021-09-27', '2021-09-28', '2021-09-29', '2021-09-30'],\n    datasets: [{\n      label: 'Portfolio',\n      data: indexData,\n      borderWidth: 1,\n      fill: false,\n      borderColor: indexColours,\n      backgroundColor: indexColours,\n    }]\n  };\n  indexChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round((value +1) *100)\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var index = parseFloat(((currentValue +1)*100 ).toFixed(1));\n          return index;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  PerformanceChartData = {\n    labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],\n    datasets: [{\n      label: 'S&P500',\n      data: [0.96,0.958,0.94,0.957,0.963,0.967,0.962,0.967,0.97,0.971,0.966,0.969,0.971,0.978,0.975,0.975,0.974,0.979,0.986,0.987,0.984,0.98,0.995,0.989,0.993,1,0.997,1.003,1.005,1.006,1.012,1.016,1.02,1.027,1.027,1.035,1.022,1.032,1.036,1.043,1.038,1.038,1.034,1.014,1.029,1.035,1.039,1.051,1.05,1.04,1.047,1.045,1.041,1.043,1.041,1.045,1.048,1.058,1.059,1.063,1.063,1.065,1.063,1.062,1.067,1.067,1.058,1.067,1.074,1.073,1.075,1.071,1.074,1.081,1.079,1.075,1.077,1.073,1.073,1.072,1.073,1.066,1.002,1,0.999,1.001,1,0.982,0.987,0.992,1.003,0.98,0.982,0.965,0.968],\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(20, 22, 49, 1)'],\n      borderColor: ['rgb(163, 134, 13)'],\n      borderWidth: 1\n    },{\n      label: 'Portfolio',\n      data: [0.976,0.971,0.953,0.971,0.976,0.981,0.976,0.98,0.983,0.985,0.98,0.983,0.985,0.991,0.989,0.989,0.987,0.993,0.999,1.001,0.997,0.994,1.009,1.002,1.007,1.013,1.011,1.017,1.019,1.02,1.02,1.018,1.022,1.023,1.014,1.021,1,1.019,1.025,1.025,1.027,1.015,1.011,0.984,0.991,1.008,1.01,1.016,1.017,1.01,1.013,1.021,1.017,1.02,1.021,1.027,1.031,1.034,1.036,1.038,1.042,1.047,1.049,1.043,1.047,1.047,1.032,1.038,1.045,1.045,1.047,1.043,1.046,1.05,1.046,1.054,1.056,1.048,1.053,1.042,1.042,1.035,1.004,1,1.005,1.007,1.01,0.995,0.994,1.01,1.025,0.998,0.996,0.971,0.979],\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)']\n    }]\n  };\n\n  PerformanceChartOptions = {\n    scales: {\n      yAxes: [{\n        display: true,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false\n        },\n        ticks: {\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: false,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n    maintainAspectRatio: false\n  };\n\n  feesChartData = {\n    labels: ['19-2021', '20-2021', '21-2021', '22-2021', '23-2021', '24-2021', '25-2021', '26-2021', '27-2021', '28-2021', '29-2021', '30-2021', '31-2021', '32-2021', '33-2021', '34-2021', '35-2021', '36-2021', '37-2021', '38-2021', '39-2021'],\n    datasets: [{\n      data: [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 3, 3, 1, 1, 0, 23, 17, 0],\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)']\n    }]\n  };\n\n  feesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          min: 0,\n          \n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n  };\n\n  tradesChartData = {\n    labels: ['19-2021', '20-2021', '21-2021', '22-2021', '23-2021', '24-2021', '25-2021', '26-2021', '27-2021', '28-2021', '29-2021', '30-2021', '31-2021', '32-2021', '33-2021', '34-2021', '35-2021', '36-2021', '37-2021', '38-2021', '39-2021'],\n    datasets: [{\n      data: [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 3, 3, 1, 1, 0, 23, 17, 0],\n      borderWidth: 1,\n      fill: false,\n      backgroundColor: 'rgb(0, 204, 212)',\n      borderColor: 'rgb(0, 204, 212)'\n    }]\n  };\n\n  tradesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        barThickness: 8,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }]\n\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  };\n\n\n  \n  render() {\n    return (\n      <div>\n        <div className=\"container p-md-0\">\n          <div className=\"az-content-body\">\n            <div className=\"az-dashboard-one-title\">\n              <div>\n                <h2 className=\"az-dashboard-title\">Portfolio Performance Tracker</h2> \n              </div>\n              <div className=\"az-content-header-right\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <label className=\"sp500_lastupdate\">Last update</label>\n                    <p>Oct 10, 2018</p>\n                  </div>{/* media-body */}\n                </div>{/* media */}\n              </div>\n            </div>{/* az-dashboard-one-title */}\n\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-7 ht-lg-100p\">\n                <div>\n                  <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <h6 className=\"card-title\">Portfolio Value</h6>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"card-body-top\">\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Value</label>\n                          <h2>42,576</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Invested</label>\n                          <h2>13,956</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain</label>\n                          <h2>+29,589</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain vs. Invested</label>\n                          <h2>125%</h2>\n                        </div>\n                      </div>{/* card-body-top */}\n                      <div className=\"performance-chart-wrapper\" style={{height:'263px'}}>\n                        <Line data={this.PerformanceChartData} options={this.PerformanceChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n                </div>{/* row */}\n              </div>{/* col */}\n              <div className=\"col-lg-5 mg-t-20 mg-lg-t-0\">\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6\">\n\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                            <h6 className=\"card-title \" > <FontAwesome name=\"chart-line\" /> Total Performance</h6>\n                            <p className=\"card-text\">since 21 Sep 2021</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Annual Return</label>\n                            <h4>33.5%</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Index vs SPX</label>\n                            <h4>120</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                        <h6 className=\"card-title\"><FontAwesome name=\"dollar-sign\" /> Cash</h6>\n                        <p className=\"card-text\">&ensp;</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&#36; Dollar</label>\n                            <h4>25,556</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&euro; Euro </label>\n                            <h4>120</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                </div>{/* row */}\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20 \">\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>56 <i className=\"icon ion-md-trending-down tx-danger\"></i> <small>0.86%</small></h6>\n                        <p>weekly trades</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Bar data={this.tradesChartData} options={this.tradesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20\" >\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>356 <small>&euro;</small></h6>\n                        <p>EUR fees per month</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Line data={this.feesChartData} options={this.feesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                </div>{/* row */}\n                \n              </div>{/*col */}\n            </div>{/* row */}\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Rate of return</h6>\n                        <p className=\"card-text sp500_returnsTitle\">{this.state.subtitle}</p>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button className=\"btn\" id=\"btnDay\" onClick={() => {this.periodChange(0)}}>Day</button>\n                        <button className=\"btn\" id=\"btnWeek\" onClick={() => {this.periodChange(1)}}>Week</button>\n                        <button className=\"btn\" id=\"btnMonth\" onClick={() => {this.periodChange(2)}}>Month</button>\n                        <button className=\"btn\" id=\"btnYear\"  onClick={() => {this.periodChange(3)}}>Year</button>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Line data={this.state} options={this.returnsChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Index vs S&P500</h6>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Bar data={this.indexChartData} options={this.indexChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}