{"ast":null,"code":"var _jsxFileName = \"/home/lu/azia-admin-react/template/src/app/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { Line, Bar } from 'react-chartjs-2';\nimport returnsData from '../../assets/data/returns.json';\nimport indexData from '../../assets/data/index.json';\nimport performanceData from '../../assets/data/performance.json';\nimport cashData from '../../assets/data/cash.json';\nconst returnsChartData = {};\nconst indexColours = indexData.data.map(value => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\nexport class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.periodChange = x => {\n      var newChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)']\n        }, {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false\n        }],\n        subtitle: returnsData[x].subtitle\n      };\n      this.setState(newChartData);\n    };\n\n    this.returnsChartOptions = {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false,\n            lineWidth: 100,\n            borderColor: ['rgb(148, 151, 193)']\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            callback: function (value, index, values) {\n              return Math.round(value * 1000) / 10 + \"%\";\n            },\n            fontColor: 'rgb(148, 151, 193)'\n          },\n          gridLines: {\n            drawBorder: true,\n            borderDash: [1, 3],\n            zeroLineColor: 'rgba(148, 151, 193,.3)'\n          }\n        }]\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.datasets[tooltipItem.datasetIndex];\n            var currentValue = dataset.data[tooltipItem.index];\n            var percentage = parseFloat((currentValue * 100).toFixed(1));\n            return percentage + '%';\n          },\n          title: function (tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n    this.indexChartData = {\n      labels: indexData.labels,\n      datasets: [{\n        label: 'Portfolio',\n        data: indexData.data,\n        borderWidth: 1,\n        fill: false,\n        borderColor: indexColours,\n        backgroundColor: indexColours\n      }]\n    };\n    this.indexChartOptions = {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false,\n            lineWidth: 100,\n            borderColor: ['rgb(148, 151, 193)']\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            callback: function (value, index, values) {\n              return Math.round((value + 1) * 100);\n            },\n            fontColor: 'rgb(148, 151, 193)'\n          },\n          gridLines: {\n            drawBorder: true,\n            borderDash: [1, 3],\n            zeroLineColor: 'rgba(148, 151, 193,.3)'\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.datasets[tooltipItem.datasetIndex];\n            var currentValue = dataset.data[tooltipItem.index];\n            var index = parseFloat(((currentValue + 1) * 100).toFixed(1));\n            return index;\n          },\n          title: function (tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        }\n      },\n      maintainAspectRatio: false\n    };\n    this.PerformanceChartData = {\n      labels: performanceData.labels,\n      datasets: [{\n        label: 'S&P500',\n        data: performanceData.sp500,\n        fill: true,\n        backgroundColor: ['rgba(20, 22, 49, 1)'],\n        borderColor: ['rgb(163, 134, 13)'],\n        borderWidth: 1\n      }, {\n        label: 'Portfolio',\n        data: performanceData.portfolio,\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: ['rgba(0, 204, 212, .2)'],\n        borderColor: ['rgb(0, 204, 212)']\n      }]\n    };\n    this.PerformanceChartOptions = {\n      scales: {\n        yAxes: [{\n          display: true,\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            display: false\n          }\n        }],\n        xAxes: [{\n          display: false,\n          position: 'bottom',\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            beginAtZero: false,\n            stepSize: 10,\n            fontColor: \"#a7afb7\",\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: false,\n        position: 'top'\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: 'rgba(2, 171, 254, 1)'\n      },\n      maintainAspectRatio: false\n    };\n    this.feesChartData = {\n      labels: cashData.fees_labels,\n      datasets: [{\n        data: cashData.fees_data,\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: ['rgba(0, 204, 212, .2)'],\n        borderColor: ['rgb(0, 204, 212)'],\n        borderDash: [10, 5]\n      }]\n    };\n    this.feesChartOptions = {\n      scales: {\n        yAxes: [{\n          display: false,\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            min: 0\n          }\n        }],\n        xAxes: [{\n          display: false,\n          position: 'bottom',\n          gridLines: {\n            drawBorder: false,\n            display: false,\n            drawTicks: false\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 10,\n            fontColor: \"#a7afb7\",\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0\n        }\n      },\n      tooltips: {\n        backgroundColor: 'rgba(2, 171, 254, 1)'\n      }\n    };\n    this.tradesChartData = {\n      labels: cashData.trades_labels,\n      datasets: [{\n        data: cashData.trades_data,\n        borderWidth: 2,\n        fill: true,\n        backgroundColor: Array(cashData.trades_labels.length - 1).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.3)']),\n        borderColor: Array(cashData.trades_labels.length - 1).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.5)'])\n      }]\n    };\n    this.tradesChartOptions = {\n      scales: {\n        yAxes: [{\n          display: false,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            display: false\n          }\n        }],\n        xAxes: [{\n          display: false,\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            display: false\n          }\n        }],\n        barThickness: 8\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.periodChange(0);\n    this.setState(returnsChartData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-md-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"az-content-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"az-dashboard-one-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"az-dashboard-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Portfolio Performance Tracker\")), React.createElement(\"div\", {\n      className: \"az-content-header-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"media-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_lastupdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Last update\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, performanceData.last_update))))), React.createElement(\"div\", {\n      className: \"row row-sm mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 ht-lg-100p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Portfolio Value\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, performanceData.value.toLocaleString('en-UK', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Invested\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, performanceData.invested.toLocaleString('en-UK', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Gain\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, (performanceData.gain < 0 ? \"\" : \"+\") + performanceData.gain.toLocaleString('en-UK', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"mg-b-0 sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Gain vs. Invested\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, (performanceData.gain_pct < 0 ? \"\" : \"+\") + Math.round(performanceData.gain_pct * 100) + \"%\"))), React.createElement(\"div\", {\n      className: \"performance-chart-wrapper\",\n      style: {\n        height: '263px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.PerformanceChartData,\n      options: this.PerformanceChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-lg-5 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-five sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \" \", React.createElement(FontAwesome, {\n      name: \"chart-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), \" Total Performance\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"since 21 Sep 2021\")), React.createElement(\"div\", {\n      className: \"card-body row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Annual Return\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, (performanceData.cagr < 0 ? \"\" : \"+\") + Math.round(performanceData.cagr * 1000) / 10 + \"%\"))), React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Index vs SPX\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, Math.round(performanceData.index_spx))))))), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-five sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(FontAwesome, {\n      name: \"dollar-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), \" Cash\"), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"\\u2002\")), React.createElement(\"div\", {\n      className: \"card-body row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"$ Dollar\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, cashData.cash_usd.toLocaleString('en-UK', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    })))), React.createElement(\"div\", {\n      className: \"col-6 d-sm-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"sp500_titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"\\u20AC Euro \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, cashData.cash_eur.toLocaleString('en-UK', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    })))))))), React.createElement(\"div\", {\n      className: \"row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6 mg-t-20 mg-sm-t-20 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-two sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, cashData.monthly_trades), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"trades opened last month\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.tradesChartData,\n      options: this.tradesChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-6 mg-t-20 mg-sm-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-two sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, cashData.monthly_fees.toLocaleString('en-UK', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }), \" \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"\\u20AC\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"last month EUR fees\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.feesChartData,\n      options: this.feesChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    })))))))), React.createElement(\"div\", {\n      className: \"row row-sm mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title sp500_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"Rate of return\"), React.createElement(\"p\", {\n      className: \"card-text sp500_returnsTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, this.state.subtitle)), React.createElement(\"div\", {\n      className: \"btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnDay\",\n      onClick: () => {\n        this.periodChange(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnWeek\",\n      onClick: () => {\n        this.periodChange(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnMonth\",\n      onClick: () => {\n        this.periodChange(2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"Month\"), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"btnYear\",\n      onClick: () => {\n        this.periodChange(3);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \"Year\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"returns-chart-wrapper\",\n      style: {\n        height: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.state,\n      options: this.returnsChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-lg-6 mg-t-20 mg-lg-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-dashboard-one sp500_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title sp500_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Index vs S&P500\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"returns-chart-wrapper\",\n      style: {\n        height: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.indexChartData,\n      options: this.indexChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })))))))));\n  }\n\n}\nexport default Dashboard;","map":{"version":3,"sources":["/home/lu/azia-admin-react/template/src/app/dashboard/Dashboard.js"],"names":["React","Component","FontAwesome","Line","Bar","returnsData","indexData","performanceData","cashData","returnsChartData","indexColours","data","map","value","Dashboard","periodChange","x","newChartData","labels","datasets","label","dataPortfolio","borderWidth","fill","borderColor","dataSP500","backgroundColor","subtitle","setState","returnsChartOptions","scales","xAxes","gridLines","display","lineWidth","yAxes","ticks","callback","index","values","Math","round","fontColor","drawBorder","borderDash","zeroLineColor","legend","position","elements","point","radius","line","tension","tooltips","callbacks","tooltipItem","dataset","datasetIndex","currentValue","percentage","parseFloat","toFixed","title","maintainAspectRatio","indexChartData","indexChartOptions","PerformanceChartData","sp500","portfolio","PerformanceChartOptions","drawTicks","beginAtZero","stepSize","padding","feesChartData","fees_labels","fees_data","feesChartOptions","min","tradesChartData","trades_labels","trades_data","Array","length","concat","tradesChartOptions","barThickness","componentWillMount","render","last_update","toLocaleString","minimumFractionDigits","maximumFractionDigits","invested","gain","gain_pct","height","cagr","index_spx","cash_usd","cash_eur","monthly_trades","monthly_fees","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport returnsData from  '../../assets/data/returns.json';\nimport indexData from  '../../assets/data/index.json';\nimport performanceData from  '../../assets/data/performance.json';\nimport cashData from  '../../assets/data/cash.json';\n\nconst returnsChartData = {};\n\nconst indexColours = indexData.data.map((value) => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\n\nexport class Dashboard extends Component { \n  componentWillMount(){\n    this.periodChange(0);\n    this.setState(returnsChartData);\n  };\n\n  \n  periodChange = (x) => {\n    var newChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)']\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false\n        }],\n        subtitle: returnsData[x].subtitle    \n       };\n    this.setState(newChartData);\n  }\n\n  returnsChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round(value * 1000) / 10 + \"%\"\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var percentage = parseFloat((currentValue*100).toFixed(1));\n          return percentage + '%';\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  indexChartData = {\n    labels: indexData.labels,\n    datasets: [{\n      label: 'Portfolio',\n      data: indexData.data,\n      borderWidth: 1,\n      fill: false,\n      borderColor: indexColours,\n      backgroundColor: indexColours,\n    }]\n  };\n  indexChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round((value +1) *100)\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var index = parseFloat(((currentValue +1)*100 ).toFixed(1));\n          return index;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  PerformanceChartData = {\n    labels: performanceData.labels,\n    datasets: [{\n      label: 'S&P500',\n      data: performanceData.sp500,\n      fill: true,\n      backgroundColor: ['rgba(20, 22, 49, 1)'],\n      borderColor: ['rgb(163, 134, 13)'],\n      borderWidth: 1\n    },{\n      label: 'Portfolio',\n      data: performanceData.portfolio,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)']\n    }]\n  };\n\n  PerformanceChartOptions = {\n    scales: {\n      yAxes: [{\n        display: true,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false\n        },\n        ticks: {\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: false,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n    maintainAspectRatio: false\n  };\n\n  feesChartData = {\n    labels: cashData.fees_labels,\n    datasets: [{\n      data: cashData.fees_data,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)'],\n      borderDash: [10,5]\n    }]\n  };\n\n  feesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          min: 0,\n          \n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n  };\n\n  tradesChartData = {\n    labels: cashData.trades_labels,\n    datasets: [{\n      data: cashData.trades_data,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.3)']) ,\n      borderColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.5)'])\n    }]\n  };\n\n  tradesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        \n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      barThickness: 8,\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  };\n\n\n  \n  render() {\n    return (\n      <div>\n        <div className=\"container p-md-0\">\n          <div className=\"az-content-body\">\n            <div className=\"az-dashboard-one-title\">\n              <div>\n                <h2 className=\"az-dashboard-title\">Portfolio Performance Tracker</h2> \n              </div>\n              <div className=\"az-content-header-right\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <label className=\"sp500_lastupdate\">Last update</label>\n                    <p>{performanceData.last_update}</p>\n                  </div>{/* media-body */}\n                </div>{/* media */}\n              </div>\n            </div>{/* az-dashboard-one-title */}\n\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-7 ht-lg-100p\">\n                <div>\n                  <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <h6 className=\"card-title\">Portfolio Value</h6>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"card-body-top\">\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Value</label>\n                          <h2>{performanceData.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Invested</label>\n                          <h2>{performanceData.invested.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain</label>\n                          <h2>{(performanceData.gain<0?\"\":\"+\") + performanceData.gain.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain vs. Invested</label>\n                          <h2>{(performanceData.gain_pct<0?\"\":\"+\") + Math.round(performanceData.gain_pct * 100) + \"%\"}</h2>\n                        </div>\n                      </div>{/* card-body-top */}\n                      <div className=\"performance-chart-wrapper\" style={{height:'263px'}}>\n                        <Line data={this.PerformanceChartData} options={this.PerformanceChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n                </div>{/* row */}\n              </div>{/* col */}\n              <div className=\"col-lg-5 mg-t-20 mg-lg-t-0\">\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6\">\n\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                            <h6 className=\"card-title \" > <FontAwesome name=\"chart-line\" /> Total Performance</h6>\n                            <p className=\"card-text\">since 21 Sep 2021</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Annual Return</label>\n                            <h4>{(performanceData.cagr<0?\"\":\"+\") + Math.round(performanceData.cagr * 1000)/10 + \"%\"}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Index vs SPX</label>\n                            <h4>{Math.round(performanceData.index_spx)}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                        <h6 className=\"card-title\"><FontAwesome name=\"dollar-sign\" /> Cash</h6>\n                        <p className=\"card-text\">&ensp;</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&#36; Dollar</label>\n                            <h4>{cashData.cash_usd.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&euro; Euro </label>\n                            <h4>{cashData.cash_eur.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                </div>{/* row */}\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20 \">\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_trades}</h6>\n                        <p>trades opened last month</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Bar data={this.tradesChartData} options={this.tradesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20\" >\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_fees.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})} <small>&euro;</small></h6>\n                        <p>last month EUR fees</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Line data={this.feesChartData} options={this.feesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                </div>{/* row */}\n                \n              </div>{/*col */}\n            </div>{/* row */}\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Rate of return</h6>\n                        <p className=\"card-text sp500_returnsTitle\">{this.state.subtitle}</p>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button className=\"btn\" id=\"btnDay\" onClick={() => {this.periodChange(0)}}>Day</button>\n                        <button className=\"btn\" id=\"btnWeek\" onClick={() => {this.periodChange(1)}}>Week</button>\n                        <button className=\"btn\" id=\"btnMonth\" onClick={() => {this.periodChange(2)}}>Month</button>\n                        <button className=\"btn\" id=\"btnYear\"  onClick={() => {this.periodChange(3)}}>Year</button>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Line data={this.state} options={this.returnsChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Index vs S&P500</h6>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Bar data={this.indexChartData} options={this.indexChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}