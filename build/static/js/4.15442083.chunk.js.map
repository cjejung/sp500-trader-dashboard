{"version":3,"sources":["app/dashboard/Dashboard.js"],"names":["returnsChartData","indexColours","indexData","data","map","value","Dashboard","periodChange","x","newChartData","labels","returnsData","datasets","label","dataPortfolio","borderWidth","fill","borderColor","dataSP500","backgroundColor","subtitle","setState","returnsChartOptions","scales","xAxes","gridLines","display","lineWidth","yAxes","ticks","callback","index","values","Math","round","fontColor","drawBorder","borderDash","zeroLineColor","legend","position","elements","point","radius","line","tension","tooltips","callbacks","tooltipItem","currentValue","datasetIndex","parseFloat","toFixed","title","maintainAspectRatio","indexChartData","indexChartOptions","PerformanceChartData","performanceData","sp500","portfolio","PerformanceChartOptions","drawTicks","beginAtZero","stepSize","padding","feesChartData","cashData","fees_labels","fees_data","slice","length","concat","undefined","Array","feesChartOptions","min","tradesChartData","trades_labels","trades_data","tradesChartOptions","barThickness","console","log","this","className","last_update","toLocaleString","minimumFractionDigits","maximumFractionDigits","invested","gain","gain_pct","style","height","options","name","cagr","index_spx","cash_usd","cash_eur","monthly_trades","monthly_fees","state","id","onClick","Component"],"mappings":"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","file":"static/js/4.15442083.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport returnsData from  '../../assets/data/returns.json';\nimport indexData from  '../../assets/data/index.json';\nimport performanceData from  '../../assets/data/performance.json';\nimport cashData from  '../../assets/data/cash.json';\n\nconst returnsChartData = {};\n\nconst indexColours = indexData.data.map((value) => value > 0 ? 'rgb(0, 204, 212)' : 'rgb(185, 153, 15)');\n\nexport class Dashboard extends Component { \n  componentWillMount(){\n    console.log(cashData.fees_data.slice(0, cashData.fees_data.length - 1).concat([undefined]))\n    console.log(Array(cashData.fees_data.length - 2 ).fill(undefined).concat( cashData.fees_data.slice(cashData.fees_data.length - 2, cashData.fees_data.length)))\n\n    this.periodChange(0);\n    this.setState(returnsChartData);\n  };\n\n  \n  periodChange = (x) => {\n    var newChartData = {\n        labels: returnsData[x].labels,\n        datasets: [{\n          label: 'Portfolio',\n          data: returnsData[x].dataPortfolio,\n          borderWidth: 2,\n          fill: false,\n          borderColor: ['rgb(0, 204, 212)']\n        },\n        {\n          label: 'S&P 500',\n          data: returnsData[x].dataSP500,\n          borderColor: ['rgb(185, 153, 15)'],\n          backgroundColor: ['rgb(163, 134, 13)'],\n          borderWidth: 1,\n          fill: false\n        }],\n        subtitle: returnsData[x].subtitle    \n       };\n    this.setState(newChartData);\n  }\n\n  returnsChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round(value * 1000) / 10 + \"%\"\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var percentage = parseFloat((currentValue*100).toFixed(1));\n          return percentage + '%';\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  indexChartData = {\n    labels: indexData.labels,\n    datasets: [{\n      label: 'Portfolio',\n      data: indexData.data,\n      borderWidth: 1,\n      fill: false,\n      borderColor: indexColours,\n      backgroundColor: indexColours,\n    }]\n  };\n  indexChartOptions = {\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          lineWidth: 100,\n          borderColor: ['rgb(148, 151, 193)'],\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          callback: function(value, index, values) {\n            return Math.round((value +1) *100)\n          },\n        fontColor: 'rgb(148, 151, 193)'\n        },\n        gridLines: {\n          drawBorder: true,\n          borderDash: [1,3],\n          \n          zeroLineColor: 'rgba(148, 151, 193,.3)'\n        }\n      }]\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var currentValue = dataset.data[tooltipItem.index];\n          var index = parseFloat(((currentValue +1)*100 ).toFixed(1));\n          return index;\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n\n  PerformanceChartData = {\n    labels: performanceData.labels,\n    datasets: [{\n      label: 'S&P500',\n      data: performanceData.sp500,\n      fill: true,\n      backgroundColor: ['rgba(20, 22, 49, 1)'],\n      borderColor: ['rgb(163, 134, 13)'],\n      borderWidth: 1\n    },{\n      label: 'Portfolio',\n      data: performanceData.portfolio,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: ['rgba(0, 204, 212, .2)'],\n      borderColor: ['rgb(0, 204, 212)']\n    }]\n  };\n\n  PerformanceChartOptions = {\n    scales: {\n      yAxes: [{\n        display: true,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false\n        },\n        ticks: {\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: false,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n      position: 'top'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n    maintainAspectRatio: false\n  };\n\n  feesChartData = {\n    labels: cashData.fees_labels,\n    datasets: [{\n      data: cashData.fees_data.slice(0, cashData.fees_data.length - 1).concat([undefined]),\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: 'rgba(0, 204, 212, .2)',\n      borderColor: 'rgb(0, 204, 212)'\n    },\n    {\n      data: Array(cashData.fees_data.length - 2 ).fill(undefined).concat( cashData.fees_data.slice(cashData.fees_data.length - 2, cashData.fees_data.length)),\n      borderWidth: 2,\n      fill: false,\n      borderColor: 'rgb(0, 204, 212)',\n      borderDash: [1,3]\n    }],\n    \n  };\n\n  feesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          min: 0,\n          \n        }\n      }],\n      xAxes: [{\n        display: false,\n        position: 'bottom',\n        gridLines: {\n          drawBorder: false,\n          display: false,\n          drawTicks: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          fontColor: \"#a7afb7\",\n          padding: 10,\n        }\n      }],\n    },\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0\n      }\n    },\n    tooltips: {\n      backgroundColor: 'rgba(2, 171, 254, 1)',\n    },\n  };\n\n  tradesChartData = {\n    labels: cashData.trades_labels,\n    datasets: [{\n      data: cashData.trades_data,\n      borderWidth: 2,\n      fill: true,\n      backgroundColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0)']) ,\n      borderColor: Array(cashData.trades_labels.length - 1 ).fill('rgb(0, 204, 212)').concat(['rgba(0, 204, 212,0.5)'])\n    }]\n  };\n\n  tradesChartOptions = {\n    scales: {\n      yAxes: [{\n        display: false,\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      xAxes: [{\n        display: false,\n        \n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          display: false\n        }\n      }],\n      barThickness: 8,\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  };\n\n\n  \n  render() {\n    return (\n      <div>\n        <div className=\"container p-md-0\">\n          <div className=\"az-content-body\">\n            <div className=\"az-dashboard-one-title\">\n              <div>\n                <h2 className=\"az-dashboard-title\">Portfolio Performance Tracker</h2> \n              </div>\n              <div className=\"az-content-header-right\">\n                <div className=\"media\">\n                  <div className=\"media-body\">\n                    <label className=\"sp500_lastupdate\">Last update</label>\n                    <p>{performanceData.last_update}</p>\n                  </div>{/* media-body */}\n                </div>{/* media */}\n              </div>\n            </div>{/* az-dashboard-one-title */}\n\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-7 ht-lg-100p\">\n                <div>\n                  <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <h6 className=\"card-title\">Portfolio Value</h6>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"card-body-top\">\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Value</label>\n                          <h2>{performanceData.value.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Invested</label>\n                          <h2>{performanceData.invested.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain</label>\n                          <h2>{(performanceData.gain<0?\"\":\"+\") + performanceData.gain.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h2>\n                        </div>\n                        <div>\n                          <label className=\"mg-b-0 sp500_titles\">Gain vs. Invested</label>\n                          <h2>{(performanceData.gain_pct<0?\"\":\"+\") + Math.round(performanceData.gain_pct * 100) + \"%\"}</h2>\n                        </div>\n                      </div>{/* card-body-top */}\n                      <div className=\"performance-chart-wrapper\" style={{height:'263px'}}>\n                        <Line data={this.PerformanceChartData} options={this.PerformanceChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n                </div>{/* row */}\n              </div>{/* col */}\n              <div className=\"col-lg-5 mg-t-20 mg-lg-t-0\">\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6\">\n\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                            <h6 className=\"card-title \" > <FontAwesome name=\"chart-line\" /> Total Performance</h6>\n                            <p className=\"card-text\">since 21 Sep 2021</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Annual Return</label>\n                            <h4>{(performanceData.cagr<0?\"\":\"+\") + Math.round(performanceData.cagr * 1000)/10 + \"%\"}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">Index vs SPX</label>\n                            <h4>{Math.round(performanceData.index_spx)}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"card card-dashboard-five sp500_card\">\n                      <div className=\"card-header\">\n                        <h6 className=\"card-title\"><FontAwesome name=\"dollar-sign\" /> Cash</h6>\n                        <p className=\"card-text\">&ensp;</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body row row-sm\">\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&#36; Dollar</label>\n                            <h4>{cashData.cash_usd.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                        <div className=\"col-6 d-sm-flex align-items-center\">\n                          <div>\n                            <label className=\"sp500_titles\">&euro; Euro </label>\n                            <h4>{cashData.cash_eur.toLocaleString('en-UK',{minimumFractionDigits: 0, maximumFractionDigits: 0})}</h4>\n                          </div>\n                        </div>{/* col */}\n                      </div>{/* card-body */}\n                    </div>{/* card-dashboard-five */}\n                  </div>{/* col */}\n\n                </div>{/* row */}\n                <div className=\"row row-sm\">\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20 \">\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_trades}</h6>\n                        <p>trades opened last month</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Bar data={this.tradesChartData} options={this.tradesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                  <div className=\"col-sm-6 mg-t-20 mg-sm-t-20\" >\n                    <div className=\"card card-dashboard-two sp500_card\">\n                      <div className=\"card-header\">\n                        <h6>{cashData.monthly_fees.toLocaleString('en-UK',{minimumFractionDigits: 2, maximumFractionDigits: 2})} <small>&euro;</small></h6>\n                        <p>last month EUR fees</p>\n                      </div>{/* card-header */}\n                      <div className=\"card-body\">\n                        <div className=\"chart-wrapper\">\n                          <Line data={this.feesChartData} options={this.feesChartOptions} />\n                        </div>{/* chart-wrapper */}\n                      </div>{/* card-body */}\n                    </div>{/* card */}\n                  </div>{/* col */}\n                </div>{/* row */}\n                \n              </div>{/*col */}\n            </div>{/* row */}\n\n            <div className=\"row row-sm mg-b-20\">\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Rate of return</h6>\n                        <p className=\"card-text sp500_returnsTitle\">{this.state.subtitle}</p>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button className=\"btn\" id=\"btnDay\" onClick={() => {this.periodChange(0)}}>Day</button>\n                        <button className=\"btn\" id=\"btnWeek\" onClick={() => {this.periodChange(1)}}>Week</button>\n                        <button className=\"btn\" id=\"btnMonth\" onClick={() => {this.periodChange(2)}}>Month</button>\n                        <button className=\"btn\" id=\"btnYear\"  onClick={() => {this.periodChange(3)}}>Year</button>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Line data={this.state} options={this.returnsChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n              <div className=\"col-lg-6 mg-t-20 mg-lg-t-0\">\n                \n                 <div className=\"card card-dashboard-one sp500_card\">\n                    <div className=\"card-header\">\n                      <div>\n                        <h6 className=\"card-title sp500_title\">Index vs S&P500</h6>\n                      </div>\n                    </div>{/* card-header */}\n                    <div className=\"card-body\">\n                      <div className=\"returns-chart-wrapper\" style={{height:'300px'}}>\n                        <Bar data={this.indexChartData} options={this.indexChartOptions} />\n                      </div>{/* flot-chart-wrapper */}\n                    </div>{/* card-body */}\n                  </div>{/* card */}\n              </div>{/* col */}\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n"],"sourceRoot":""}